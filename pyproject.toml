[project]
name = "poetry-plugin-dotenv"
version = "2.6.1"
description = "poetry-plugin-dotenv - is the plugin that automatically loads environment variables from a dotenv file into the environment before poetry commands are run."
license = "MIT"
readme = "README.md"
authors = [{ name = "Volodymyr Pivoshenko", email = "volodymyr.pivoshenko@gmail.com" }]
maintainers = [{ name = "Volodymyr Pivoshenko", email = "volodymyr.pivoshenko@gmail.com" }]
keywords = [
  "python",
  "pypi",
  "poetry",
  "plugin",
  "plugins",
  "poetry-plugin",
  "poetry-plugins",
  "env",
  "dotenv",
  "config",
  "configuration",
  "configuration-management",
  "cross-platform",
  "hacktoberfest"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Environment :: Other Environment",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Intended Audience :: Developers",
  "Intended Audience :: Information Technology",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering",
  "Natural Language :: English"
]
requires-python = ">=3.9,<4.0"
dependencies = ["poetry (>=1.5.0,<3.0.0)"]

[project.urls]
homepage = "https://github.com/pivoshenko/poetry-plugin-dotenv"
documentation = "https://github.com/pivoshenko/poetry-plugin-dotenv"
repository = "https://github.com/pivoshenko/poetry-plugin-dotenv"
"Issues" = "https://github.com/pivoshenko/poetry-plugin-dotenv/issues"
"Releases" = "https://github.com/pivoshenko/poetry-plugin-dotenv/releases"

[tool.poetry]
packages = [{ include = "poetry_plugin_dotenv", from = "src" }]

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"
poethepoet = "^0.32.2"
ipdb = "^0.13.13"
ipython = "^8.12.3"

[tool.poetry.group.formatters.dependencies]
isort = "^6.0.0"
ruff = "^0.9.4"
pyupgrade = "^3.19.1"

[tool.poetry.group.linters.dependencies]
mypy = "^1.15.0"
ruff = "^0.9.4"
deptry = "^0.23.0"
codespell = "^2.4.1"
commitizen = "^4.1.1"

[tool.poetry.group.lsp.dependencies]
python-lsp-server = { extras = ["all"], version = "^1.12.0" }
ruff-lsp = "^0.0.60"
pylsp-mypy = "^0.7.0"
pylsp-rope = "^0.1.17"
python-lsp-isort = "^0.2.0"

[tool.poetry.group.tests.dependencies]
# pytest version should be fixed due to the next issues
# https://github.com/pytest-dev/pytest/issues/11890
# https://github.com/TvoroG/pytest-lazy-fixture/issues/65
pytest = "^7.4.4"
xdoctest = "^1.2.0"
pytest-lazy-fixture = "^0.6.3"
pytest-codeblocks = "^0.17.0"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"
pytest-sugar = "^1.0.0"
coverage = { version = "^7.6.10", extras = ["toml"] }
sh = "^2.2.1"

[tool.poetry.group.ci.dependencies]
python-semantic-release = ">=9.17.0"

[tool.poetry.plugins."poetry.application.plugin"]
poetry-plugin-dotenv = "poetry_plugin_dotenv.plugin:DotenvPlugin"

[tool.semantic_release]
changelog_file = "CHANGELOG.md"
commit_author = "github-actions <github-actions@github.com>"
exclude_commit_patterns = ["Merge pull request"]
logging_use_named_masks = true
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/poetry_plugin_dotenv/__init__.py:__version__"]

[tool.semantic_release.commit_parser_options]
major_tags = ["feat"]
minor_tags = ["fix", "perf", "refactor"]
patch_tags = ["docs", "style"]

[tool.semantic_release.changelog]
exclude_commit_patterns = ['''Merged? .*''', '''Initial Commit.*''', '''^\d+\.\d+\.\d+''']

[tool.commitizen]
allowed_prefixes = ["build", "tests", "Merge", "Initial", "0", "1", "2", "3"]

[tool.isort]
color_output = true
force_alphabetical_sort_within_sections = true
force_single_line = true
length_sort_straight = true
line_length = 100
lines_after_imports = 2
lines_between_types = 1
profile = "black"

[tool.mypy]
namespace_packages = true
python_version = "3.13"
show_error_codes = true
strict = true
warn_unused_configs = true

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["PTH", "ANN002", "ANN003", "ARG002", "D202", "I001", "FIX002", "TD003"]

[tool.ruff.lint.per-file-ignores]
"src/poetry_plugin_dotenv/__init__.py" = ["E501"]
"src/poetry_plugin_dotenv/config.py" = []
"src/poetry_plugin_dotenv/dotenv/core.py" = ["PTH"]
"tests/*.*" = ["INP001", "S101"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.codespell]
skip = ["poetry.lock"]
ignore-words-list = ["redunant", "resovle", "socio-economic", "emtpy"]

[tool.deptry.per_rule_ignores]
DEP002 = ["poetry"]
DEP003 = ["cleo", "poetry_plugin_dotenv", "tomlkit"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
  "-l",
  "-vv",
  "-rx",
  "--xdoc",
  "--color=yes",
  "--cov=src",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--basetemp=tests/fixtures"
]

[tool.coverage.run]
omit = ["*/__init__.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
