[tool.poetry]
name = "poetry-dotenv"
version = "0.0.1"
description = "poetry-dotenv - is the tool that automatically loads environment variables from .env files into the environment before poetry commands are run."
license = "MIT"
authors = ["Volodymyr Pivoshenko <volodymyr.pivoshenko@gmail.com>"]
maintainers = ["Volodymyr Pivoshenko <volodymyr.pivoshenko@gmail.com>"]
keywords = [
    "python",
    "pypi",
    "poetry",
    "plugins",
    "dotenv",
    "cross-platform",
    "hacktoberfest",
]
homepage = "https://poetry-dotenv.readthedocs.io/en/latest"
documentation = "https://poetry-dotenv.readthedocs.io/en/latest"
repository = "https://github.com/volopivoshenko/poetry-dotenv"
readme = "README.md"
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Environment :: Other Environment",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
    "Natural Language :: English",
]
packages = [{ include = "poetry_dotenv", from = "src" }]

[tool.poetry.urls]
"Issues" = "https://github.com/volopivoshenko/poetry-dotenv/issues"
"Releases" = "https://github.com/volopivoshenko/poetry-dotenv/releases"
"Say Thanks!" = "https://www.buymeacoffee.com/volopivoshenko"

[tool.poetry.dependencies]
python = "^3.7"
# utils
decorator = "^5.1.1"
typing-extensions = "^4.2.0"
awesome-pattern-matching = "^0.24.3"

[tool.poetry.extras]

[tool.poetry.dev-dependencies]
# formatters
isort = "^5.10.1"
black = "^22.6.0"
# linters
mypy = "^0.971"
wemake-python-styleguide = "^0.16.1"
# flake8 extensions
flake8-pytest-style = "^1.6.0"
pyproject-flake8 = "^4.0.1"
# tests
pytest = "^7.1.2"
xdoctest = "^1.0.2"
# pytest extensions
pytest-datafiles = "^2.0.1"
pytest-lazy-fixture = "^0.6.3"
pytest-mock = "^3.8.2"
pytest-cov = "^3.0.0"
pytest-sugar = "^0.9.5"
coverage = { version = "^6.4.4", extras = ["toml"] }
# CI
python-semantic-release = "^7.31.4"
# utils
poethepoet = "^0.16.0"
pre-commit = "^2.20.0"
ipython = "^7.34.0"  # newest version does not support Python 3.7

[tool.semantic_release]
branch = "main"
changelog_file = "CHANGELOG.md"
build_command = "poetry build"
dist_path = "dist"
upload_to_repository = false
upload_to_release = true
remove_dist = false
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = [
    "src/poetry_dotenv/__init__.py:__version__",
    "docs/conf.py:release",
]

[tool.isort]
profile = "black"
line_length = 100
lines_after_imports = 2
lines_between_types = 1
atomic = false
color_output = true
force_single_line = true
length_sort_straight = true
include_trailing_comma = false
force_alphabetical_sort_within_sections = true

[tool.black]
line-length = 100
target-version = [
    "py37",
    "py38",
    "py39",
    "py310",
]
include = '\.pyi?$'

[tool.flake8]
max-line-length = 100
max-local-variables = 10
inline-quotes = '"'
docstring_style = "numpy"
exclude = [
    "__init__.py",
    "tests/*.py",
]
extend-ignore = []

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
ignore_missing_imports = true
show_error_codes = true
files = ["src"]
exclude = ["tests"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-l",
    "-vv",
    "--xdoc",
    "--color=yes",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=xml",
]
testpaths = [
    "src",
    "tests",
]

[tool.coverage.run]
omit = ["*/__init__.py"]

[tool.poe.tasks]
format = [
    { cmd = "isort --settings-path pyproject.toml ." },
    { cmd = "black --config pyproject.toml ." },
]
lint-flake8 = { cmd = "pflake8 --config pyproject.toml ." }
lint-mypy = { cmd = "mypy --config-file pyproject.toml ." }
lint = [
    { ref = "lint-flake8" },
    { ref = "lint-mypy" },
]
tests = { cmd = "pytest" }
clean = [
    { cmd = "find . -type f -name '*.py[co]' -delete" },
    { cmd = "find . -type f -name .DS_Store -delete" },
    { cmd = "find . -type d -name __pycache__ -exec rm -rf {} +" },
    { cmd = "rm -rf dist" },
    { cmd = "rm -rf .pytest" },
    { cmd = "rm -rf .pytest_cache" },
    { cmd = "rm -rf .coverage" },
    { cmd = "rm -rf .flake8" },
    { cmd = "rm -rf .mypy" },
    { cmd = "rm -rf .mypy_cache" },
    { cmd = "rm -rf docs/_build" },
    { cmd = "rm -rf docs/_sources" },
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
